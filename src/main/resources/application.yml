# =====================================
# Application generic configuration
# =====================================
spring:
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: ""
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
    show-sql: true
  main:
    banner-mode: "console"

logging:
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %replace(%-5level){'INFO','?? INFO','WARN','?? WARN','ERROR','? ERROR'} %cyan(%logger{36}) - %msg%n"
  level:
    org.springframework: info

# =====================================
# Swagger configuration
# =====================================
swagger:
  title: ${project.name}
  description: ${project.description}
  version: ${project.version}
  terms-of-service-url: http://localhost:${server.port}/terms-of-service
  license-name: MIT
  license-url: https://opensource.org/license/mit
  contact:
    name: "Your name"
    url: "Your contact URL"
    email: "Your e-mail"
  servers:
    - url: http://localhost:8080
      description: Local environment
    - url: https://staging-api.yourservice.com
      description: Staging environment
    - url: https://api.yourservice.com
      description: Production environment

server:
  port: 8080

# =====================================
# Actuator + Management configuration
# =====================================
management:
  endpoints:
    web:
      base-path: /management
      exposure:
        include: info, health, prometheus
  info:
    env:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: true

info:
  app:
    name: ${project.name}
    version: ${project.version}
    description: ${project.description}
  build:
    timestamp: ${maven.build.timestamp}
  environment:
    profile: ${spring.profiles.active:local}
    java:
      version: ${java.version}
    os:
      name: ${os.name}
      arch: ${os.arch}